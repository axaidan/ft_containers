=========================
=	CONSTRUCTION	=
=========================

===	display_capacity() :
===	CONTEXT : default constructed empty map m
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : default constructed empty map m
	===	NO CONTENT

===	display_capacity() :
===	CONTEXT : rand_insert()ed values in m
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : rand_insert()ed values in m
	===	m[DGPBUTKTEB]	=	-1.1
	===	m[GYXMPHTHFJ]	=	3.14
	===	m[HFHHQVSXZE]	=	-1.1
	===	m[HIKGZMOBXX]	=	3.14
	===	m[LGEAJYOBHX]	=	0
	===	m[QNLNFIMLOR]	=	-1.1
	===	m[RDKESODPQA]	=	3.14
	===	m[RHPFNGXNIG]	=	3.14
	===	m[ULYZCODSOQ]	=	-1.1
	===	m[WJRDFYJOLF]	=	3.14

===	display_capacity() :
===	CONTEXT : range constructed from m begin/end
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : range constructed from m begin/end
	===	m[DGPBUTKTEB]	=	-1.1
	===	m[GYXMPHTHFJ]	=	3.14
	===	m[HFHHQVSXZE]	=	-1.1
	===	m[HIKGZMOBXX]	=	3.14
	===	m[LGEAJYOBHX]	=	0
	===	m[QNLNFIMLOR]	=	-1.1
	===	m[RDKESODPQA]	=	3.14
	===	m[RHPFNGXNIG]	=	3.14
	===	m[ULYZCODSOQ]	=	-1.1
	===	m[WJRDFYJOLF]	=	3.14

===	display_capacity() :
===	CONTEXT : range constructed from m begin/begin
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : range constructed from m begin/begin
	===	NO CONTENT

===	display_capacity() :
===	CONTEXT : range constructed from m begin/half
	===	m.empty()	=	false
	===	m.size()	=	5
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : range constructed from m begin/half
	===	m[DGPBUTKTEB]	=	-1.1
	===	m[GYXMPHTHFJ]	=	3.14
	===	m[HFHHQVSXZE]	=	-1.1
	===	m[HIKGZMOBXX]	=	3.14
	===	m[LGEAJYOBHX]	=	0

===	display_capacity() :
===	CONTEXT : range constructed from m half/end
	===	m.empty()	=	false
	===	m.size()	=	5
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : range constructed from m half/end
	===	m[QNLNFIMLOR]	=	-1.1
	===	m[RDKESODPQA]	=	3.14
	===	m[RHPFNGXNIG]	=	3.14
	===	m[ULYZCODSOQ]	=	-1.1
	===	m[WJRDFYJOLF]	=	3.14

===	display_capacity() :
===	CONTEXT : copy constructed from m_range1
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : copy constructed from m_range1
	===	m[DGPBUTKTEB]	=	-1.1
	===	m[GYXMPHTHFJ]	=	3.14
	===	m[HFHHQVSXZE]	=	-1.1
	===	m[HIKGZMOBXX]	=	3.14
	===	m[LGEAJYOBHX]	=	0
	===	m[QNLNFIMLOR]	=	-1.1
	===	m[RDKESODPQA]	=	3.14
	===	m[RHPFNGXNIG]	=	3.14
	===	m[ULYZCODSOQ]	=	-1.1
	===	m[WJRDFYJOLF]	=	3.14

===	display_relationals() :
===	CONTEXT : copy constructed from m_range1
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	true
	===	(m1 >  m2)	=	false
	===	(m1 >= m2)	=	true

=========================
=	ASSIGNATION	=
=========================

===	display_capacity() :
===	CONTEXT : (rand_insert() * 2) filling m1
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : (rand_insert() * 2) filling m1
	===	NO CONTENT

===	display_capacity() :
===	CONTEXT : map<K, T> m1(N, VAL3); m2 = m1; with m1 bigger than m2
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : map<K, T> m1(N, VAL3); m2 = m1; with m1 bigger than m2
	===	m[EUNXEHBGES]	=	0
	===	m[GWTKZSGATG]	=	0
	===	m[PBWYEECZTZ]	=	3.14
	===	m[QVVTZQOBFG]	=	0
	===	m[SKUCKRGMIW]	=	3.14
	===	m[VZCDWRLCMD]	=	3.14
	===	m[WVNODNHJSZ]	=	-1.1
	===	m[YCXPQBBVTA]	=	0
	===	m[ZLXSRLCPAJ]	=	3.14
	===	m[ZRXHFKYXCC]	=	0

===	display_relationals() :
===	CONTEXT : map<K, T> m1(N, VAL3); m2 = m1; with m1 bigger than m2
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	true
	===	(m1 >  m2)	=	false
	===	(m1 >= m2)	=	true

===	display_capacity() :
===	CONTEXT : map<K, T> m3; m2 = m3; m2 is empty
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : map<K, T> m3; m2 = m3; m2 is empty
	===	NO CONTENT

===	display_relationals() :
===	CONTEXT : map<K, T> m3; m2 = m3; m2 is empty
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	false
	===	(m1 >  m2)	=	true
	===	(m1 >= m2)	=	true

===	display_capacity() :
===	CONTEXT : rand_insert(m3);
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : rand_insert(m3);
	===	m[CGRLYKODEN]	=	3.14
	===	m[GSOSGJSTCF]	=	-1.1
	===	m[LBUAIGTKNK]	=	3.14
	===	m[LULZOWXHBJ]	=	0
	===	m[MDPVJGHVRL]	=	-1.1
	===	m[MZLSJGEPMM]	=	0
	===	m[PVIIJJNQZO]	=	-1.1
	===	m[XFEFAOULVR]	=	3.14
	===	m[XSOGFGHVJG]	=	-1.1
	===	m[YIUMKMMTYK]	=	0

===	display_relationals() :
===	CONTEXT : rand_insert(m3);
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	false
	===	(m1 >  m2)	=	true
	===	(m1 >= m2)	=	true

===	display_capacity() :
===	CONTEXT : m3 = m2 = m1; multiple assignations test
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : m3 = m2 = m1; multiple assignations test
	===	NO CONTENT

===	display_relationals() :
===	CONTEXT : m3 = m2 = m1; multiple assignations test
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	true
	===	(m1 >  m2)	=	false
	===	(m1 >= m2)	=	true

=========================
=	ELEMENT ACCESS	=
=========================

===	display_capacity() :
===	CONTEXT : m1[KVAL1] = VAL1; m1[KVAL2] = VAL2; m1[KVAL3] = VAL3;
	===	m.empty()	=	false
	===	m.size()	=	3
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : m1[KVAL1] = VAL1; m1[KVAL2] = VAL2; m1[KVAL3] = VAL3;
	===	m[moins un virgule un]	=	-1.1
	===	m[trois virg quatorze]	=	3.14
	===	m[zero virgule zero]	=	0

===	display_capacity() :
===	CONTEXT : rand_insert() filling m1
	===	m.empty()	=	false
	===	m.size()	=	23
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : rand_insert() filling m1
	===	m[AYSMYEMUFK]	=	-1.1
	===	m[EHCLELVLSJ]	=	0
	===	m[EONCLUDUDQ]	=	3.14
	===	m[GGLCQEXXKB]	=	0
	===	m[HVKMVKYKYW]	=	-1.1
	===	m[JYIOXFAALP]	=	0
	===	m[KVYHZUKRUE]	=	-1.1
	===	m[LYDVOGCDTN]	=	0
	===	m[MDWUHZNWXT]	=	0
	===	m[MWUHJJPJWV]	=	0
	===	m[OAZZRIVNZF]	=	3.14
	===	m[OGXOTTNPIX]	=	3.14
	===	m[OOKZJWSTMG]	=	3.14
	===	m[TCPXNKRLHK]	=	-1.1
	===	m[TXODUBCZQK]	=	3.14
	===	m[UEZZRVGDKB]	=	-1.1
	===	m[UNJDWFUHIF]	=	3.14
	===	m[VNEZQGPCCQ]	=	0
	===	m[WQXUISGRRS]	=	0
	===	m[XSLQAEJVSX]	=	-1.1
	===	m[moins un virgule un]	=	-1.1
	===	m[trois virg quatorze]	=	3.14
	===	m[zero virgule zero]	=	0

===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	display_capacity() :
===	CONTEXT : replaced values in existing keys
	===	m.empty()	=	false
	===	m.size()	=	23
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : replaced values in existing keys
	===	m[AYSMYEMUFK]	=	3.14
	===	m[EHCLELVLSJ]	=	3.14
	===	m[EONCLUDUDQ]	=	0
	===	m[GGLCQEXXKB]	=	3.14
	===	m[HVKMVKYKYW]	=	3.14
	===	m[JYIOXFAALP]	=	3.14
	===	m[KVYHZUKRUE]	=	3.14
	===	m[LYDVOGCDTN]	=	3.14
	===	m[MDWUHZNWXT]	=	3.14
	===	m[MWUHJJPJWV]	=	3.14
	===	m[OAZZRIVNZF]	=	0
	===	m[OGXOTTNPIX]	=	0
	===	m[OOKZJWSTMG]	=	0
	===	m[TCPXNKRLHK]	=	3.14
	===	m[TXODUBCZQK]	=	0
	===	m[UEZZRVGDKB]	=	3.14
	===	m[UNJDWFUHIF]	=	0
	===	m[VNEZQGPCCQ]	=	3.14
	===	m[WQXUISGRRS]	=	3.14
	===	m[XSLQAEJVSX]	=	3.14
	===	m[moins un virgule un]	=	3.14
	===	m[trois virg quatorze]	=	0
	===	m[zero virgule zero]	=	3.14

=========================
=	MODIFIERS	=
=========================

===	insert(val)
	===	insert FBZSLSFSDR succeeded
	===	insert PSYOKEEOIW succeeded
	===	insert PFAQGTNOWX succeeded
	===	insert QDAPYLJDFM succeeded
	===	insert VVHVJRBPGJ succeeded
	===	insert NXQQPWJCLG succeeded
	===	insert CBLCSJOBNT succeeded
	===	insert QKQXFCQIRY succeeded
	===	insert RHXKXMGGPR succeeded
	===	insert ORUAVOJJQY succeeded

===	display_capacity() :
===	CONTEXT : inserted N random keys with VAL1
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : inserted N random keys with VAL1
	===	m[CBLCSJOBNT]	=	3.14
	===	m[FBZSLSFSDR]	=	3.14
	===	m[NXQQPWJCLG]	=	3.14
	===	m[ORUAVOJJQY]	=	3.14
	===	m[PFAQGTNOWX]	=	3.14
	===	m[PSYOKEEOIW]	=	3.14
	===	m[QDAPYLJDFM]	=	3.14
	===	m[QKQXFCQIRY]	=	3.14
	===	m[RHXKXMGGPR]	=	3.14
	===	m[VVHVJRBPGJ]	=	3.14

	===	insert CBLCSJOBNT failed
	===	insert FBZSLSFSDR failed
	===	insert NXQQPWJCLG failed
	===	insert ORUAVOJJQY failed
	===	insert PFAQGTNOWX failed
	===	insert PSYOKEEOIW failed
	===	insert QDAPYLJDFM failed
	===	insert QKQXFCQIRY failed
	===	insert RHXKXMGGPR failed
	===	insert VVHVJRBPGJ failed

===	display_capacity() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m[CBLCSJOBNT]	=	3.14
	===	m[FBZSLSFSDR]	=	3.14
	===	m[NXQQPWJCLG]	=	3.14
	===	m[ORUAVOJJQY]	=	3.14
	===	m[PFAQGTNOWX]	=	3.14
	===	m[PSYOKEEOIW]	=	3.14
	===	m[QDAPYLJDFM]	=	3.14
	===	m[QKQXFCQIRY]	=	3.14
	===	m[RHXKXMGGPR]	=	3.14
	===	m[VVHVJRBPGJ]	=	3.14

===	insert(pos, val)
===	display_content() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m[ATAXDZKJFB]	=	-1.1
	===	m[CBLCSJOBNT]	=	3.14
	===	m[CYGEWJDIVI]	=	-1.1
	===	m[DWUZWPOHBG]	=	-1.1
	===	m[FBZSLSFSDR]	=	3.14
	===	m[FIKXHRZZZT]	=	-1.1
	===	m[IIQSFXMHYL]	=	-1.1
	===	m[LAGFBCWRMX]	=	-1.1
	===	m[NXQQPWJCLG]	=	3.14
	===	m[ORUAVOJJQY]	=	3.14
	===	m[PFAQGTNOWX]	=	3.14
	===	m[PSYOKEEOIW]	=	3.14
	===	m[QDAPYLJDFM]	=	3.14
	===	m[QKQXFCQIRY]	=	3.14
	===	m[RHXKXMGGPR]	=	3.14
	===	m[VVHVJRBPGJ]	=	3.14

===	display_capacity() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m.empty()	=	false
	===	m.size()	=	16
	===	m.max_size()	=	128102389400760775

===	insert(first, last)
===	creating a list of N random elems
	===	inserting list l in map m

===	display_content() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m[ATAXDZKJFB]	=	-1.1
	===	m[CBLCSJOBNT]	=	3.14
	===	m[CYGEWJDIVI]	=	-1.1
	===	m[DWUZWPOHBG]	=	-1.1
	===	m[FBZSLSFSDR]	=	3.14
	===	m[FIKXHRZZZT]	=	-1.1
	===	m[FVKPNBEBDA]	=	3.14
	===	m[HJEHNWNASY]	=	-1.1
	===	m[IIQSFXMHYL]	=	-1.1
	===	m[JTBVXBSHEX]	=	0
	===	m[LAGFBCWRMX]	=	-1.1
	===	m[NXQQPWJCLG]	=	3.14
	===	m[ORUAVOJJQY]	=	3.14
	===	m[OWJSALHHSB]	=	3.14
	===	m[OYLUCJGFRB]	=	-1.1
	===	m[PEDWJEAGWO]	=	0
	===	m[PFAQGTNOWX]	=	3.14
	===	m[PSYOKEEOIW]	=	3.14
	===	m[QDAPYLJDFM]	=	3.14
	===	m[QKQXFCQIRY]	=	3.14
	===	m[QTACQENWLH]	=	-1.1
	===	m[RHXKXMGGPR]	=	3.14
	===	m[RKCEBPFFSK]	=	3.14
	===	m[VVHVJRBPGJ]	=	3.14
	===	m[ZCLEYXIBFG]	=	0
	===	m[ZWHPOPOCWN]	=	3.14

===	display_capacity() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m.empty()	=	false
	===	m.size()	=	26
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : erased m.begin() and last element
	===	m[CBLCSJOBNT]	=	3.14
	===	m[CYGEWJDIVI]	=	-1.1
	===	m[DWUZWPOHBG]	=	-1.1
	===	m[FBZSLSFSDR]	=	3.14
	===	m[FIKXHRZZZT]	=	-1.1
	===	m[FVKPNBEBDA]	=	3.14
	===	m[HJEHNWNASY]	=	-1.1
	===	m[IIQSFXMHYL]	=	-1.1
	===	m[JTBVXBSHEX]	=	0
	===	m[LAGFBCWRMX]	=	-1.1
	===	m[NXQQPWJCLG]	=	3.14
	===	m[ORUAVOJJQY]	=	3.14
	===	m[OWJSALHHSB]	=	3.14
	===	m[OYLUCJGFRB]	=	-1.1
	===	m[PEDWJEAGWO]	=	0
	===	m[PFAQGTNOWX]	=	3.14
	===	m[PSYOKEEOIW]	=	3.14
	===	m[QDAPYLJDFM]	=	3.14
	===	m[QKQXFCQIRY]	=	3.14
	===	m[QTACQENWLH]	=	-1.1
	===	m[RHXKXMGGPR]	=	3.14
	===	m[RKCEBPFFSK]	=	3.14
	===	m[VVHVJRBPGJ]	=	3.14
	===	m[ZCLEYXIBFG]	=	0
	===	m[ZWHPOPOCWN]	=	3.14

===	display_capacity() :
===	CONTEXT : erased m.begin() and last element
	===	m.empty()	=	false
	===	m.size()	=	25
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : erased one out of two elements
	===	m[CYGEWJDIVI]	=	-1.1
	===	m[FBZSLSFSDR]	=	3.14
	===	m[FVKPNBEBDA]	=	3.14
	===	m[IIQSFXMHYL]	=	-1.1
	===	m[LAGFBCWRMX]	=	-1.1
	===	m[ORUAVOJJQY]	=	3.14
	===	m[OYLUCJGFRB]	=	-1.1
	===	m[PFAQGTNOWX]	=	3.14
	===	m[QDAPYLJDFM]	=	3.14
	===	m[QTACQENWLH]	=	-1.1
	===	m[RKCEBPFFSK]	=	3.14
	===	m[ZCLEYXIBFG]	=	0

===	display_capacity() :
===	CONTEXT : erased one out of two elements
	===	m.empty()	=	false
	===	m.size()	=	12
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : erased all elements with TVAL1 value
	===	m[CYGEWJDIVI]	=	-1.1
	===	m[IIQSFXMHYL]	=	-1.1
	===	m[LAGFBCWRMX]	=	-1.1
	===	m[OYLUCJGFRB]	=	-1.1
	===	m[QTACQENWLH]	=	-1.1
	===	m[ZCLEYXIBFG]	=	0

===	display_capacity() :
===	CONTEXT : erased all elements with TVAL1 value
	===	m.empty()	=	false
	===	m.size()	=	6
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : erased second half of m
	===	m[CYGEWJDIVI]	=	-1.1
	===	m[IIQSFXMHYL]	=	-1.1
	===	m[LAGFBCWRMX]	=	-1.1

===	display_capacity() :
===	CONTEXT : erased second half of m
	===	m.empty()	=	false
	===	m.size()	=	3
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : erased first elem by key
	===	m[IIQSFXMHYL]	=	-1.1
	===	m[LAGFBCWRMX]	=	-1.1

===	display_capacity() :
===	CONTEXT : erased first elem by key
	===	m.empty()	=	false
	===	m.size()	=	2
	===	m.max_size()	=	128102389400760775

	===	erased 1 element
===	display_content() :
===	CONTEXT : erased random key by key
	===	m[IIQSFXMHYL]	=	-1.1
	===	m[LAGFBCWRMX]	=	-1.1

===	display_capacity() :
===	CONTEXT : erased random key by key
	===	m.empty()	=	false
	===	m.size()	=	2
	===	m.max_size()	=	128102389400760775

	===	erased 0 element
===	display_content() :
===	CONTEXT : swapped m2 and m
	===	m[CYGEWJDIVI]	=	-1.1
	===	m[IIQSFXMHYL]	=	-1.1
	===	m[LAGFBCWRMX]	=	-1.1
	===	m[OYLUCJGFRB]	=	-1.1
	===	m[QTACQENWLH]	=	-1.1
	===	m[ZCLEYXIBFG]	=	0

===	display_capacity() :
===	CONTEXT : swapped m2 and m
	===	m.empty()	=	false
	===	m.size()	=	6
	===	m.max_size()	=	128102389400760775

===	display_relationals() :
===	CONTEXT : swapped m2 and m
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true
	===	(m1 <  m2)	=	true
	===	(m1 <= m2)	=	true
	===	(m1 >  m2)	=	false
	===	(m1 >= m2)	=	false

===	display_content() :
===	CONTEXT : cleared m and m2
	===	NO CONTENT

===	display_capacity() :
===	CONTEXT : cleared m and m2
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	128102389400760775

===	display_relationals() :
===	CONTEXT : cleared m and m2
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	true
	===	(m1 >  m2)	=	false
	===	(m1 >= m2)	=	true

=========================
=	ITERATORS	=
=========================

===	display_capacity() :
===	CONTEXT : created new map
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	128102389400760775

===	display_content() :
===	CONTEXT : created new map
	===	m[DAXKLLNSAN]	=	3.14
	===	m[EJVGWEPQFH]	=	-1.1
	===	m[HMQGXIJJLT]	=	3.14
	===	m[HRFKLZLQBK]	=	0
	===	m[INRHYFIODF]	=	3.14
	===	m[LIYGFCANGZ]	=	-1.1
	===	m[SGCRCBTRYF]	=	3.14
	===	m[WWUAMNGVFY]	=	0
	===	m[YHZLNWSNZA]	=	0
	===	m[ZLHBOWJNZQ]	=	3.14

===	iterator iteration
	===	DAXKLLNSAN
	===	EJVGWEPQFH
	===	HMQGXIJJLT
	===	HRFKLZLQBK
	===	INRHYFIODF
	===	LIYGFCANGZ
	===	SGCRCBTRYF
	===	WWUAMNGVFY
	===	YHZLNWSNZA
	===	ZLHBOWJNZQ

===	reverse_iterator iteration
	===	ZLHBOWJNZQ
	===	YHZLNWSNZA
	===	WWUAMNGVFY
	===	SGCRCBTRYF
	===	LIYGFCANGZ
	===	INRHYFIODF
	===	HRFKLZLQBK
	===	HMQGXIJJLT
	===	EJVGWEPQFH
	===	DAXKLLNSAN

===	const_iterator iteration
	===	DAXKLLNSAN
	===	EJVGWEPQFH
	===	HMQGXIJJLT
	===	HRFKLZLQBK
	===	INRHYFIODF
	===	LIYGFCANGZ
	===	SGCRCBTRYF
	===	WWUAMNGVFY
	===	YHZLNWSNZA
	===	ZLHBOWJNZQ

===	const_reverse_iterator iteration
	===	ZLHBOWJNZQ
	===	YHZLNWSNZA
	===	WWUAMNGVFY
	===	SGCRCBTRYF
	===	LIYGFCANGZ
	===	INRHYFIODF
	===	HRFKLZLQBK
	===	HMQGXIJJLT
	===	EJVGWEPQFH
	===	DAXKLLNSAN

===	display_it_relationals() :
===	CONTEXT : ite = it; it and ite relationals
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false

===	display_it_relationals() :
===	CONTEXT : it--; it and ite relationals
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true

===	display_it_relationals() :
===	CONTEXT : cite = cit; cit and cite relationals
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false

===	display_it_relationals() :
===	CONTEXT : cit--; cit and cite relationals
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true

===	display_it_relationals() :
===	CONTEXT : rite = rit; rit and rite relationals
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false

===	display_it_relationals() :
===	CONTEXT : rit--; rit and rite relationals
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true

===	display_it_relationals() :
===	CONTEXT : crite = crit; crit and crite relationals
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false

===	display_it_relationals() :
===	CONTEXT : crit--; crit and crite relationals
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true

===	ite = it; *it = VAL3;
===	(ite == it)	=	true

===	rite = rit; *rit = VAL1;
===	(rite == rit)	=	true

===	cite = cit;
===	(cite == cit)	=	true

===	crite = crit;
===	(cite == crit)	=	true

===	weird iteration
	===	*(it++)	=	DAXKLLNSAN
	===	*(--it)	=	DAXKLLNSAN
	===	*(++it)	=	EJVGWEPQFH
	===	*(it--)	=	EJVGWEPQFH

===	reverse weird iteration
	===	*(rit++)	=	ZLHBOWJNZQ
	===	*(--rit)	=	ZLHBOWJNZQ
	===	*(++rit)	=	YHZLNWSNZA
	===	*(rit--)	=	YHZLNWSNZA

=========================
=	OBSERVERS	=
=========================

===	rand_insert()ed m twice
===	display_content() :
===	CONTEXT : rand_insert()ed m twice2
	===	m[AXIDUBLVLQ]	=	3.14
	===	m[BKWDGXWDBB]	=	-1.1
	===	m[BZGWACMJGP]	=	0
	===	m[COVAXHLVDI]	=	0
	===	m[CZQEOZLDHB]	=	-1.1
	===	m[DZFNLCQVDR]	=	-1.1
	===	m[ERULQJZQWD]	=	0
	===	m[FTFGLHUQHP]	=	-1.1
	===	m[GHKOCAXTIZ]	=	0
	===	m[KKEXXWYLVZ]	=	3.14
	===	m[KXGNUBWAJY]	=	-1.1
	===	m[OSCSDXDTUV]	=	0
	===	m[QHLECBRCUD]	=	-1.1
	===	m[SDIUVFZOOY]	=	3.14
	===	m[VPVWOVHMLX]	=	3.14
	===	m[WEYAVCWZRV]	=	0
	===	m[YBMWBZSAMC]	=	0
	===	m[ZANVTCXVHE]	=	3.14
	===	m[ZMFJXOVQNA]	=	-1.1
	===	m[ZWNZTTAUQH]	=	0

===	display_capacity() :
===	CONTEXT : rand_insert()ed m twice2
	===	m.empty()	=	false
	===	m.size()	=	20
	===	m.max_size()	=	128102389400760775

===	comparing key with next key
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false

===	comparing key with next key
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false

=========================
=	OPERATIONS	=
=========================

===	display_content() :
===	CONTEXT : rand_insert()ed m twice2
	===	m[CMKFLPAZBL]	=	0
	===	m[DELERQLVNW]	=	0
	===	m[DGIAEILGHO]	=	-1.1
	===	m[DONNWVJWZN]	=	3.14
	===	m[JVAIYVDVWH]	=	3.14
	===	m[KAVXLQYPGD]	=	0
	===	m[KXBPVRRKMU]	=	0
	===	m[LUTBUUEFVF]	=	0
	===	m[NLVORYOUJL]	=	0
	===	m[OIFWXDTYXT]	=	-1.1
	===	m[PGRMJMJTZC]	=	3.14
	===	m[PZSESYWJOL]	=	0
	===	m[REBZRJGIWA]	=	-1.1
	===	m[RVCCUVYXLA]	=	3.14
	===	m[UAFOWNQDQP]	=	-1.1
	===	m[UUGKHBXDTO]	=	-1.1
	===	m[XKYRRFOWXZ]	=	3.14
	===	m[YOORHAEBYD]	=	0
	===	m[ZHUUSSWHCH]	=	3.14
	===	m[ZKNPKEYNAP]	=	3.14

===	display_capacity() :
===	CONTEXT : rand_insert()ed m twice2
	===	m.empty()	=	false
	===	m.size()	=	20
	===	m.max_size()	=	128102389400760775

===	find(existing k) and change value
	===	CMKFLPAZBL FOUND
	===	DELERQLVNW FOUND
	===	DGIAEILGHO FOUND
	===	DONNWVJWZN FOUND
	===	JVAIYVDVWH FOUND
	===	KAVXLQYPGD FOUND
	===	KXBPVRRKMU FOUND
	===	LUTBUUEFVF FOUND
	===	NLVORYOUJL FOUND
	===	OIFWXDTYXT FOUND
	===	PGRMJMJTZC FOUND
	===	PZSESYWJOL FOUND
	===	REBZRJGIWA FOUND
	===	RVCCUVYXLA FOUND
	===	UAFOWNQDQP FOUND
	===	UUGKHBXDTO FOUND
	===	XKYRRFOWXZ FOUND
	===	YOORHAEBYD FOUND
	===	ZHUUSSWHCH FOUND
	===	ZKNPKEYNAP FOUND

===	display_content() :
===	CONTEXT : changed value while finding
	===	m[CMKFLPAZBL]	=	-1.1
	===	m[DELERQLVNW]	=	-1.1
	===	m[DGIAEILGHO]	=	-1.1
	===	m[DONNWVJWZN]	=	-1.1
	===	m[JVAIYVDVWH]	=	-1.1
	===	m[KAVXLQYPGD]	=	-1.1
	===	m[KXBPVRRKMU]	=	-1.1
	===	m[LUTBUUEFVF]	=	-1.1
	===	m[NLVORYOUJL]	=	-1.1
	===	m[OIFWXDTYXT]	=	-1.1
	===	m[PGRMJMJTZC]	=	-1.1
	===	m[PZSESYWJOL]	=	-1.1
	===	m[REBZRJGIWA]	=	-1.1
	===	m[RVCCUVYXLA]	=	-1.1
	===	m[UAFOWNQDQP]	=	-1.1
	===	m[UUGKHBXDTO]	=	-1.1
	===	m[XKYRRFOWXZ]	=	-1.1
	===	m[YOORHAEBYD]	=	-1.1
	===	m[ZHUUSSWHCH]	=	-1.1
	===	m[ZKNPKEYNAP]	=	-1.1

===	display_capacity() :
===	CONTEXT : changed value while finding
	===	m.empty()	=	false
	===	m.size()	=	20
	===	m.max_size()	=	128102389400760775

===	find(probably non existing k)
	===	SVJRYCRVXF NOT FOUND
	===	LIABBYRYKC NOT FOUND
	===	UBEPFYNBHB NOT FOUND
	===	OBWXUUBLSZ NOT FOUND
	===	QFJSGLTZJF NOT FOUND
	===	CFGIUNIJQR NOT FOUND
	===	KFTIEPFIBX NOT FOUND
	===	HTESOMDJLO NOT FOUND
	===	OPWUXQHHCX NOT FOUND
	===	ZMESXLJCTM NOT FOUND

===	const find(existing k)
	===	CMKFLPAZBL FOUND
	===	DELERQLVNW FOUND
	===	DGIAEILGHO FOUND
	===	DONNWVJWZN FOUND
	===	JVAIYVDVWH FOUND
	===	KAVXLQYPGD FOUND
	===	KXBPVRRKMU FOUND
	===	LUTBUUEFVF FOUND
	===	NLVORYOUJL FOUND
	===	OIFWXDTYXT FOUND
	===	PGRMJMJTZC FOUND
	===	PZSESYWJOL FOUND
	===	REBZRJGIWA FOUND
	===	RVCCUVYXLA FOUND
	===	UAFOWNQDQP FOUND
	===	UUGKHBXDTO FOUND
	===	XKYRRFOWXZ FOUND
	===	YOORHAEBYD FOUND
	===	ZHUUSSWHCH FOUND
	===	ZKNPKEYNAP FOUND

===	const find(probably non existing k)
	===	BCGFUWTAFE NOT FOUND
	===	QTWONTHWDJ NOT FOUND
	===	VCVAWSNFWI NOT FOUND
	===	SXKAEGWXID NOT FOUND
	===	CBWYPLTWJW NOT FOUND
	===	FEYDEWVTCU NOT FOUND
	===	BWRNWWUUTC NOT FOUND
	===	XXDVXVGTRP NOT FOUND
	===	RXVSACOXVQ NOT FOUND
	===	RXMLKKHGEC NOT FOUND

===	count(existing k) CMKFLPAZBL
	===	m.count(k)	=	1

===	count(probably non existing k) LDCOYBLGUD
	===	m.count(k)	=	0

===	upper_bound(existing k) PGRMJMJTZC
	===	m.upper_bound(k)	=	PZSESYWJOL

===	upper_bound(probably non existing k) XOATGCVUZS
	===	m.upper_bound(k)	=	YOORHAEBYD

===	lower_bound(existing k) PGRMJMJTZC
	===	m.lower_bound(k)	=	PGRMJMJTZC

===	lower_bound(probably non existing k) NTPBECMNIS
	===	m.lower_bound(k)	=	OIFWXDTYXT

===	equal_range(existing k) PGRMJMJTZC
	===	1 element with key PGRMJMJTZC in map m

===	equal_range(probably non existing k) RTWVKWXVFT
	===	0 element with key RTWVKWXVFT in map m

