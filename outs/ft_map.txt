=========================
=	CONSTRUCTION	=
=========================

===	display_capacity() :
===	CONTEXT : default constructed empty map m
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : default constructed empty map m
	===	NO CONTENT

===	display_capacity() :
===	CONTEXT : rand_insert()ed values in m
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : rand_insert()ed values in m
	===	m[    -89]	=	0
	===	m[    -86]	=	3.14
	===	m[    -64]	=	0
	===	m[    -28]	=	-1.1
	===	m[    -23]	=	0
	===	m[     17]	=	-1.1
	===	m[     35]	=	-1.1
	===	m[     51]	=	-1.1
	===	m[     98]	=	-1.1
	===	m[     99]	=	-1.1

===	display_capacity() :
===	CONTEXT : range constructed from m begin/end
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : range constructed from m begin/end
	===	m[    -89]	=	0
	===	m[    -86]	=	3.14
	===	m[    -64]	=	0
	===	m[    -28]	=	-1.1
	===	m[    -23]	=	0
	===	m[     17]	=	-1.1
	===	m[     35]	=	-1.1
	===	m[     51]	=	-1.1
	===	m[     98]	=	-1.1
	===	m[     99]	=	-1.1

===	display_capacity() :
===	CONTEXT : range constructed from m begin/begin
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : range constructed from m begin/begin
	===	NO CONTENT

===	display_capacity() :
===	CONTEXT : range constructed from m begin/half
	===	m.empty()	=	false
	===	m.size()	=	5
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : range constructed from m begin/half
	===	m[    -89]	=	0
	===	m[    -86]	=	3.14
	===	m[    -64]	=	0
	===	m[    -28]	=	-1.1
	===	m[    -23]	=	0

===	display_capacity() :
===	CONTEXT : range constructed from m half/end
	===	m.empty()	=	false
	===	m.size()	=	5
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : range constructed from m half/end
	===	m[     17]	=	-1.1
	===	m[     35]	=	-1.1
	===	m[     51]	=	-1.1
	===	m[     98]	=	-1.1
	===	m[     99]	=	-1.1

===	display_capacity() :
===	CONTEXT : copy constructed from m_range1
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : copy constructed from m_range1
	===	m[    -89]	=	0
	===	m[    -86]	=	3.14
	===	m[    -64]	=	0
	===	m[    -28]	=	-1.1
	===	m[    -23]	=	0
	===	m[     17]	=	-1.1
	===	m[     35]	=	-1.1
	===	m[     51]	=	-1.1
	===	m[     98]	=	-1.1
	===	m[     99]	=	-1.1

===	display_relationals() :
===	CONTEXT : copy constructed from m_range1
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	true
	===	(m1 >  m2)	=	false
	===	(m1 >= m2)	=	true

=========================
=	ASSIGNATION	=
=========================

===	display_capacity() :
===	CONTEXT : (rand_insert() * 2) filling m1
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : (rand_insert() * 2) filling m1
	===	NO CONTENT

===	display_capacity() :
===	CONTEXT : map<K, T> m1(N, VAL3); m2 = m1; with m1 bigger than m2
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : map<K, T> m1(N, VAL3); m2 = m1; with m1 bigger than m2
	===	m[    -73]	=	0
	===	m[    -46]	=	3.14
	===	m[    -38]	=	3.14
	===	m[    -37]	=	0
	===	m[    -26]	=	0
	===	m[     17]	=	3.14
	===	m[     22]	=	0
	===	m[     29]	=	3.14
	===	m[     50]	=	-1.1
	===	m[     67]	=	0

===	display_relationals() :
===	CONTEXT : map<K, T> m1(N, VAL3); m2 = m1; with m1 bigger than m2
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	true
	===	(m1 >  m2)	=	false
	===	(m1 >= m2)	=	true

===	display_capacity() :
===	CONTEXT : map<K, T> m3; m2 = m3; m2 is empty
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : map<K, T> m3; m2 = m3; m2 is empty
	===	NO CONTENT

===	display_relationals() :
===	CONTEXT : map<K, T> m3; m2 = m3; m2 is empty
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	false
	===	(m1 >  m2)	=	true
	===	(m1 >= m2)	=	true

===	display_capacity() :
===	CONTEXT : rand_insert(m3);
	===	m.empty()	=	false
	===	m.size()	=	8
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : rand_insert(m3);
	===	m[    -92]	=	0
	===	m[    -71]	=	3.14
	===	m[    -14]	=	0
	===	m[     11]	=	3.14
	===	m[     21]	=	-1.1
	===	m[     25]	=	-1.1
	===	m[     31]	=	-1.1
	===	m[     56]	=	3.14

===	display_relationals() :
===	CONTEXT : rand_insert(m3);
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	false
	===	(m1 >  m2)	=	true
	===	(m1 >= m2)	=	true

===	display_capacity() :
===	CONTEXT : m3 = m2 = m1; multiple assignations test
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : m3 = m2 = m1; multiple assignations test
	===	NO CONTENT

===	display_relationals() :
===	CONTEXT : m3 = m2 = m1; multiple assignations test
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	true
	===	(m1 >  m2)	=	false
	===	(m1 >= m2)	=	true

=========================
=	ELEMENT ACCESS	=
=========================

===	display_capacity() :
===	CONTEXT : m1[KVAL1] = VAL1; m1[KVAL2] = VAL2; m1[KVAL3] = VAL3;
	===	m.empty()	=	false
	===	m.size()	=	3
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : m1[KVAL1] = VAL1; m1[KVAL2] = VAL2; m1[KVAL3] = VAL3;
	===	m[     -1]	=	-1.1
	===	m[      0]	=	0
	===	m[    314]	=	3.14

===	display_capacity() :
===	CONTEXT : rand_insert() filling m1
	===	m.empty()	=	false
	===	m.size()	=	21
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : rand_insert() filling m1
	===	m[    -86]	=	3.14
	===	m[    -74]	=	0
	===	m[    -52]	=	3.14
	===	m[    -42]	=	0
	===	m[    -41]	=	-1.1
	===	m[    -22]	=	-1.1
	===	m[    -21]	=	3.14
	===	m[    -17]	=	3.14
	===	m[     -1]	=	-1.1
	===	m[      0]	=	0
	===	m[     13]	=	-1.1
	===	m[     18]	=	0
	===	m[     19]	=	-1.1
	===	m[     20]	=	-1.1
	===	m[     23]	=	3.14
	===	m[     35]	=	-1.1
	===	m[     61]	=	3.14
	===	m[     64]	=	0
	===	m[     80]	=	0
	===	m[     94]	=	-1.1
	===	m[    314]	=	3.14

===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL1;
===	key1 = it->first;
	===	m1[key1] = TVAL3;
===	display_capacity() :
===	CONTEXT : replaced values in existing keys
	===	m.empty()	=	false
	===	m.size()	=	21
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : replaced values in existing keys
	===	m[    -86]	=	0
	===	m[    -74]	=	3.14
	===	m[    -52]	=	0
	===	m[    -42]	=	3.14
	===	m[    -41]	=	3.14
	===	m[    -22]	=	3.14
	===	m[    -21]	=	0
	===	m[    -17]	=	0
	===	m[     -1]	=	3.14
	===	m[      0]	=	3.14
	===	m[     13]	=	3.14
	===	m[     18]	=	3.14
	===	m[     19]	=	3.14
	===	m[     20]	=	3.14
	===	m[     23]	=	0
	===	m[     35]	=	3.14
	===	m[     61]	=	0
	===	m[     64]	=	3.14
	===	m[     80]	=	3.14
	===	m[     94]	=	3.14
	===	m[    314]	=	0

=========================
=	MODIFIERS	=
=========================

===	insert(val)
	===	insert -70 succeeded
	===	insert 1 succeeded
	===	insert -59 succeeded
	===	insert 23 succeeded
	===	insert -1 succeeded
	===	insert 71 succeeded
	===	insert -2 succeeded
	===	insert 83 succeeded
	===	insert -78 succeeded
	===	insert 3 succeeded

===	display_capacity() :
===	CONTEXT : inserted N random keys with VAL1
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : inserted N random keys with VAL1
	===	m[    -78]	=	3.14
	===	m[    -70]	=	3.14
	===	m[    -59]	=	3.14
	===	m[     -2]	=	3.14
	===	m[     -1]	=	3.14
	===	m[      1]	=	3.14
	===	m[      3]	=	3.14
	===	m[     23]	=	3.14
	===	m[     71]	=	3.14
	===	m[     83]	=	3.14

	===	insert -78 failed
	===	insert -70 failed
	===	insert -59 failed
	===	insert -2 failed
	===	insert -1 failed
	===	insert 1 failed
	===	insert 3 failed
	===	insert 23 failed
	===	insert 71 failed
	===	insert 83 failed

===	display_capacity() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m[    -78]	=	3.14
	===	m[    -70]	=	3.14
	===	m[    -59]	=	3.14
	===	m[     -2]	=	3.14
	===	m[     -1]	=	3.14
	===	m[      1]	=	3.14
	===	m[      3]	=	3.14
	===	m[     23]	=	3.14
	===	m[     71]	=	3.14
	===	m[     83]	=	3.14

===	insert(pos, val)
===	display_content() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m[    -78]	=	3.14
	===	m[    -74]	=	-1.1
	===	m[    -70]	=	3.14
	===	m[    -60]	=	-1.1
	===	m[    -59]	=	3.14
	===	m[    -43]	=	-1.1
	===	m[     -2]	=	3.14
	===	m[     -1]	=	3.14
	===	m[      1]	=	3.14
	===	m[      3]	=	3.14
	===	m[     17]	=	-1.1
	===	m[     23]	=	3.14
	===	m[     56]	=	-1.1
	===	m[     71]	=	3.14
	===	m[     83]	=	3.14
	===	m[     97]	=	-1.1

===	display_capacity() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m.empty()	=	false
	===	m.size()	=	16
	===	m.max_size()	=	230584300921369395

===	insert(first, last)
===	creating a list of N random elems
	===	inserting list l in map m

===	display_content() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m[    -98]	=	-1.1
	===	m[    -78]	=	3.14
	===	m[    -74]	=	-1.1
	===	m[    -70]	=	3.14
	===	m[    -68]	=	3.14
	===	m[    -60]	=	-1.1
	===	m[    -59]	=	3.14
	===	m[    -43]	=	-1.1
	===	m[    -31]	=	3.14
	===	m[    -23]	=	0
	===	m[    -10]	=	-1.1
	===	m[     -2]	=	3.14
	===	m[     -1]	=	3.14
	===	m[      1]	=	3.14
	===	m[      3]	=	3.14
	===	m[     16]	=	3.14
	===	m[     17]	=	-1.1
	===	m[     23]	=	3.14
	===	m[     39]	=	0
	===	m[     56]	=	-1.1
	===	m[     71]	=	3.14
	===	m[     77]	=	-1.1
	===	m[     83]	=	3.14
	===	m[     94]	=	0
	===	m[     97]	=	-1.1

===	display_capacity() :
===	CONTEXT : tried to insert existing keys with VAL3
	===	m.empty()	=	false
	===	m.size()	=	25
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : erased m.begin() and last element
	===	m[    -78]	=	3.14
	===	m[    -74]	=	-1.1
	===	m[    -70]	=	3.14
	===	m[    -68]	=	3.14
	===	m[    -60]	=	-1.1
	===	m[    -59]	=	3.14
	===	m[    -43]	=	-1.1
	===	m[    -31]	=	3.14
	===	m[    -23]	=	0
	===	m[    -10]	=	-1.1
	===	m[     -2]	=	3.14
	===	m[     -1]	=	3.14
	===	m[      1]	=	3.14
	===	m[      3]	=	3.14
	===	m[     16]	=	3.14
	===	m[     17]	=	-1.1
	===	m[     23]	=	3.14
	===	m[     39]	=	0
	===	m[     56]	=	-1.1
	===	m[     71]	=	3.14
	===	m[     77]	=	-1.1
	===	m[     83]	=	3.14
	===	m[     94]	=	0
	===	m[     97]	=	-1.1

===	display_capacity() :
===	CONTEXT : erased m.begin() and last element
	===	m.empty()	=	false
	===	m.size()	=	24
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : erased one out of two elements
	===	m[    -74]	=	-1.1
	===	m[    -68]	=	3.14
	===	m[    -59]	=	3.14
	===	m[    -31]	=	3.14
	===	m[    -10]	=	-1.1
	===	m[     -1]	=	3.14
	===	m[      3]	=	3.14
	===	m[     17]	=	-1.1
	===	m[     39]	=	0
	===	m[     71]	=	3.14
	===	m[     83]	=	3.14
	===	m[     97]	=	-1.1

===	display_capacity() :
===	CONTEXT : erased one out of two elements
	===	m.empty()	=	false
	===	m.size()	=	12
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : erased all elements with TVAL1 value
	===	m[    -74]	=	-1.1
	===	m[    -10]	=	-1.1
	===	m[     17]	=	-1.1
	===	m[     39]	=	0
	===	m[     97]	=	-1.1

===	display_capacity() :
===	CONTEXT : erased all elements with TVAL1 value
	===	m.empty()	=	false
	===	m.size()	=	5
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : erased second half of m
	===	m[    -74]	=	-1.1
	===	m[    -10]	=	-1.1

===	display_capacity() :
===	CONTEXT : erased second half of m
	===	m.empty()	=	false
	===	m.size()	=	2
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : erased first elem by key
	===	m[    -10]	=	-1.1

===	display_capacity() :
===	CONTEXT : erased first elem by key
	===	m.empty()	=	false
	===	m.size()	=	1
	===	m.max_size()	=	230584300921369395

	===	erased 1 element
===	display_content() :
===	CONTEXT : erased random key by key
	===	m[    -10]	=	-1.1

===	display_capacity() :
===	CONTEXT : erased random key by key
	===	m.empty()	=	false
	===	m.size()	=	1
	===	m.max_size()	=	230584300921369395

	===	erased 0 element
===	display_content() :
===	CONTEXT : swapped m2 and m
	===	m[    -74]	=	-1.1
	===	m[    -10]	=	-1.1
	===	m[     17]	=	-1.1
	===	m[     39]	=	0
	===	m[     97]	=	-1.1

===	display_capacity() :
===	CONTEXT : swapped m2 and m
	===	m.empty()	=	false
	===	m.size()	=	5
	===	m.max_size()	=	230584300921369395

===	display_relationals() :
===	CONTEXT : swapped m2 and m
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true
	===	(m1 <  m2)	=	true
	===	(m1 <= m2)	=	true
	===	(m1 >  m2)	=	false
	===	(m1 >= m2)	=	false

===	display_content() :
===	CONTEXT : cleared m and m2
	===	NO CONTENT

===	display_capacity() :
===	CONTEXT : cleared m and m2
	===	m.empty()	=	true
	===	m.size()	=	0
	===	m.max_size()	=	230584300921369395

===	display_relationals() :
===	CONTEXT : cleared m and m2
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false
	===	(m1 <  m2)	=	false
	===	(m1 <= m2)	=	true
	===	(m1 >  m2)	=	false
	===	(m1 >= m2)	=	true

=========================
=	ITERATORS	=
=========================

===	display_capacity() :
===	CONTEXT : created new map
	===	m.empty()	=	false
	===	m.size()	=	10
	===	m.max_size()	=	230584300921369395

===	display_content() :
===	CONTEXT : created new map
	===	m[    -71]	=	-1.1
	===	m[    -65]	=	3.14
	===	m[    -55]	=	0
	===	m[    -51]	=	0
	===	m[    -18]	=	3.14
	===	m[     13]	=	3.14
	===	m[     20]	=	0
	===	m[     26]	=	0
	===	m[     65]	=	3.14
	===	m[     70]	=	-1.1

===	iterator iteration
	===	-71
	===	-65
	===	-55
	===	-51
	===	-18
	===	13
	===	20
	===	26
	===	65
	===	70

===	reverse_iterator iteration
	===	70
	===	65
	===	26
	===	20
	===	13
	===	-18
	===	-51
	===	-55
	===	-65
	===	-71

===	const_iterator iteration
	===	-71
	===	-65
	===	-55
	===	-51
	===	-18
	===	13
	===	20
	===	26
	===	65
	===	70

===	const_reverse_iterator iteration
	===	70
	===	65
	===	26
	===	20
	===	13
	===	-18
	===	-51
	===	-55
	===	-65
	===	-71

===	display_it_relationals() :
===	CONTEXT : ite = it; it and ite relationals
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false

===	display_it_relationals() :
===	CONTEXT : it--; it and ite relationals
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true

===	display_it_relationals() :
===	CONTEXT : cite = cit; cit and cite relationals
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false

===	display_it_relationals() :
===	CONTEXT : cit--; cit and cite relationals
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true

===	display_it_relationals() :
===	CONTEXT : rite = rit; rit and rite relationals
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false

===	display_it_relationals() :
===	CONTEXT : rit--; rit and rite relationals
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true

===	display_it_relationals() :
===	CONTEXT : crite = crit; crit and crite relationals
	===	(m1 == m2)	=	true
	===	(m1 != m2)	=	false

===	display_it_relationals() :
===	CONTEXT : crit--; crit and crite relationals
	===	(m1 == m2)	=	false
	===	(m1 != m2)	=	true

===	ite = it; *it = VAL3;
===	(ite == it)	=	true

===	rite = rit; *rit = VAL1;
===	(rite == rit)	=	true

===	cite = cit;
===	(cite == cit)	=	true

===	crite = crit;
===	(cite == crit)	=	true

===	weird iteration
	===	*(it++)	=	-71
	===	*(--it)	=	-71
	===	*(++it)	=	-65
	===	*(it--)	=	-65

===	reverse weird iteration
	===	*(rit++)	=	70
	===	*(--rit)	=	70
	===	*(++rit)	=	65
	===	*(rit--)	=	65

=========================
=	OBSERVERS	=
=========================

===	rand_insert()ed m twice
===	display_content() :
===	CONTEXT : rand_insert()ed m twice2
	===	m[    -99]	=	0
	===	m[    -96]	=	0
	===	m[    -51]	=	-1.1
	===	m[    -50]	=	3.14
	===	m[    -40]	=	3.14
	===	m[    -38]	=	0
	===	m[    -33]	=	-1.1
	===	m[    -32]	=	0
	===	m[    -21]	=	0
	===	m[    -14]	=	0
	===	m[     13]	=	0
	===	m[     40]	=	0
	===	m[     51]	=	0
	===	m[     61]	=	0
	===	m[     65]	=	3.14
	===	m[     79]	=	0
	===	m[     82]	=	3.14
	===	m[     86]	=	3.14
	===	m[     92]	=	3.14
	===	m[     99]	=	3.14

===	display_capacity() :
===	CONTEXT : rand_insert()ed m twice2
	===	m.empty()	=	false
	===	m.size()	=	20
	===	m.max_size()	=	230584300921369395

===	comparing key with next key
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false
	===	k_comp(it->first, it2->first)	=	true
	===	k_comp(it2->first, it->first)	=	false

===	comparing key with next key
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false
	===	v_comp(it->first, it2->first)	=	true
	===	v_comp(it2->first, it1->first)	=	false

=========================
=	OPERATIONS	=
=========================

===	display_content() :
===	CONTEXT : rand_insert()ed m twice2
	===	m[    -93]	=	3.14
	===	m[    -88]	=	3.14
	===	m[    -82]	=	0
	===	m[    -80]	=	-1.1
	===	m[    -74]	=	-1.1
	===	m[    -62]	=	0
	===	m[    -18]	=	0
	===	m[     -3]	=	3.14
	===	m[     -1]	=	0
	===	m[      5]	=	3.14
	===	m[     13]	=	0
	===	m[     15]	=	-1.1
	===	m[     35]	=	0
	===	m[     50]	=	-1.1
	===	m[     57]	=	0
	===	m[     81]	=	0
	===	m[     87]	=	0
	===	m[     91]	=	-1.1
	===	m[     96]	=	-1.1

===	display_capacity() :
===	CONTEXT : rand_insert()ed m twice2
	===	m.empty()	=	false
	===	m.size()	=	19
	===	m.max_size()	=	230584300921369395

===	find(existing k) and change value
	===	-93 FOUND
	===	-88 FOUND
	===	-82 FOUND
	===	-80 FOUND
	===	-74 FOUND
	===	-62 FOUND
	===	-18 FOUND
	===	-3 FOUND
	===	-1 FOUND
	===	5 FOUND
	===	13 FOUND
	===	15 FOUND
	===	35 FOUND
	===	50 FOUND
	===	57 FOUND
	===	81 FOUND
	===	87 FOUND
	===	91 FOUND
	===	96 FOUND

===	display_content() :
===	CONTEXT : changed value while finding
	===	m[    -93]	=	-1.1
	===	m[    -88]	=	-1.1
	===	m[    -82]	=	-1.1
	===	m[    -80]	=	-1.1
	===	m[    -74]	=	-1.1
	===	m[    -62]	=	-1.1
	===	m[    -18]	=	-1.1
	===	m[     -3]	=	-1.1
	===	m[     -1]	=	-1.1
	===	m[      5]	=	-1.1
	===	m[     13]	=	-1.1
	===	m[     15]	=	-1.1
	===	m[     35]	=	-1.1
	===	m[     50]	=	-1.1
	===	m[     57]	=	-1.1
	===	m[     81]	=	-1.1
	===	m[     87]	=	-1.1
	===	m[     91]	=	-1.1
	===	m[     96]	=	-1.1

===	display_capacity() :
===	CONTEXT : changed value while finding
	===	m.empty()	=	false
	===	m.size()	=	19
	===	m.max_size()	=	230584300921369395

===	find(probably non existing k)
	===	-97 NOT FOUND
	===	19 NOT FOUND
	===	-87 NOT FOUND
	===	73 NOT FOUND
	===	-3 FOUND
	===	64 NOT FOUND
	===	-59 NOT FOUND
	===	76 NOT FOUND
	===	-45 NOT FOUND
	===	43 NOT FOUND

===	const find(existing k)
	===	-93 FOUND
	===	-88 FOUND
	===	-82 FOUND
	===	-80 FOUND
	===	-74 FOUND
	===	-62 FOUND
	===	-18 FOUND
	===	-3 FOUND
	===	-1 FOUND
	===	5 FOUND
	===	13 FOUND
	===	15 FOUND
	===	35 FOUND
	===	50 FOUND
	===	57 FOUND
	===	81 FOUND
	===	87 FOUND
	===	91 FOUND
	===	96 FOUND

===	const find(probably non existing k)
	===	-32 NOT FOUND
	===	59 NOT FOUND
	===	-4 NOT FOUND
	===	20 NOT FOUND
	===	-76 NOT FOUND
	===	83 NOT FOUND
	===	-89 NOT FOUND
	===	42 NOT FOUND
	===	-39 NOT FOUND
	===	88 NOT FOUND

===	count(existing k) -93
	===	m.count(k)	=	1

===	count(probably non existing k) -71
	===	m.count(k)	=	0

===	upper_bound(existing k) 5
	===	m.upper_bound(k)	=	13

===	upper_bound(probably non existing k) 43
	===	m.upper_bound(k)	=	50

===	lower_bound(existing k) 5
	===	m.lower_bound(k)	=	5

===	lower_bound(probably non existing k) -68
	===	m.lower_bound(k)	=	-62

===	equal_range(existing k) 5
	===	1 element with key 5 in map m

===	equal_range(probably non existing k) 79
	===	0 element with key 79 in map m

